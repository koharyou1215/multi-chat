"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api/openrouter.ts":
/*!*******************************!*\
  !*** ./lib/api/openrouter.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenRouterClient: () => (/* binding */ OpenRouterClient)\n/* harmony export */ });\nclass OpenRouterClient {\n    async generateResponse(model, messages, systemPrompt) {\n        const openRouterMessages = [];\n        // Add system prompt if provided\n        if (systemPrompt) {\n            openRouterMessages.push({\n                role: \"system\",\n                content: systemPrompt\n            });\n        }\n        // Convert chat messages to OpenRouter format\n        messages.forEach((msg)=>{\n            const hasImageAttachments = (msg.attachments || []).some((a)=>{\n                var _a_mimeType;\n                return (_a_mimeType = a.mimeType) === null || _a_mimeType === void 0 ? void 0 : _a_mimeType.startsWith(\"image/\");\n            });\n            if (msg.role === \"user\" && hasImageAttachments) {\n                const parts = [];\n                if (msg.content && msg.content.trim().length > 0) {\n                    parts.push({\n                        type: \"text\",\n                        text: msg.content\n                    });\n                }\n                for (const att of msg.attachments || []){\n                    var _att_mimeType;\n                    if (((_att_mimeType = att.mimeType) === null || _att_mimeType === void 0 ? void 0 : _att_mimeType.startsWith(\"image/\")) && att.url) {\n                        parts.push({\n                            type: \"image_url\",\n                            image_url: {\n                                url: att.url\n                            }\n                        });\n                    }\n                }\n                openRouterMessages.push({\n                    role: \"user\",\n                    content: parts\n                });\n            } else {\n                openRouterMessages.push({\n                    role: msg.role,\n                    content: msg.content\n                });\n            }\n        });\n        const requestBody = {\n            model,\n            messages: openRouterMessages,\n            temperature: 0.7,\n            max_tokens: 4000,\n            stream: false\n        };\n        const response = await fetch(\"\".concat(this.baseUrl, \"/chat/completions\"), {\n            method: \"POST\",\n            headers: {\n                Authorization: \"Bearer \".concat(this.apiKey),\n                \"Content-Type\": \"application/json\",\n                \"HTTP-Referer\": window.location.origin,\n                \"X-Title\": \"MultiChat AI\"\n            },\n            body: JSON.stringify(requestBody)\n        });\n        if (!response.ok) {\n            const errorData = await response.text();\n            throw new Error(\"OpenRouter API error (\".concat(response.status, \"): \").concat(errorData));\n        }\n        const data = await response.json();\n        if (!data.choices || data.choices.length === 0) {\n            throw new Error(\"No response from OpenRouter API\");\n        }\n        return data.choices[0].message.content;\n    }\n    async validateApiKey() {\n        try {\n            const response = await fetch(\"\".concat(this.baseUrl, \"/models\"), {\n                headers: {\n                    Authorization: \"Bearer \".concat(this.apiKey),\n                    \"HTTP-Referer\": window.location.origin\n                }\n            });\n            return response.ok;\n        } catch (e) {\n            return false;\n        }\n    }\n    async getAvailableModels() {\n        const response = await fetch(\"\".concat(this.baseUrl, \"/models\"), {\n            headers: {\n                Authorization: \"Bearer \".concat(this.apiKey),\n                \"HTTP-Referer\": window.location.origin\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch models\");\n        }\n        const data = await response.json();\n        return data.data || [];\n    }\n    constructor(apiKey){\n        this.baseUrl = \"https://openrouter.ai/api/v1\";\n        this.apiKey = apiKey;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api/openrouter.ts\n"));

/***/ })

});