"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./store/use-app-store.ts":
/*!********************************!*\
  !*** ./store/use-app-store.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAppStore: () => (/* binding */ useAppStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n\n\nconst createDefaultPanel = (id)=>({\n        id,\n        modelId: \"anthropic/claude-sonnet-4\",\n        messages: [],\n        isLoading: false\n    });\nconst useAppStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n        panels: [\n            createDefaultPanel(\"panel-1\")\n        ],\n        activePanels: 1,\n        customPrompts: [],\n        openRouterApiKey: \"\",\n        selectedPanelId: \"panel-1\",\n        sidebarOpen: true,\n        multiSendIds: [],\n        setPanelCount: (count)=>{\n            const { panels } = get();\n            const newPanels = [\n                ...panels\n            ];\n            if (count > panels.length) {\n                for(let i = panels.length; i < count; i++){\n                    newPanels.push(createDefaultPanel(\"panel-\".concat(i + 1)));\n                }\n            } else if (count < panels.length) {\n                newPanels.splice(count);\n            }\n            // ensure selected panel is within range\n            const currentSelected = get().selectedPanelId;\n            const validSelected = currentSelected && Number(currentSelected.split(\"-\")[1]) <= count ? currentSelected : \"panel-1\";\n            set({\n                panels: newPanels,\n                activePanels: count,\n                selectedPanelId: validSelected\n            });\n        },\n        updatePanel: (panelId, updates)=>{\n            set((state)=>({\n                    panels: state.panels.map((panel)=>panel.id === panelId ? {\n                            ...panel,\n                            ...updates\n                        } : panel)\n                }));\n        },\n        addMessage: (panelId, message)=>{\n            set((state)=>({\n                    panels: state.panels.map((panel)=>panel.id === panelId ? {\n                            ...panel,\n                            messages: [\n                                ...panel.messages,\n                                message\n                            ]\n                        } : panel)\n                }));\n        },\n        setModelForPanel: (panelId, modelId)=>{\n            set((state)=>({\n                    panels: state.panels.map((panel)=>panel.id === panelId ? {\n                            ...panel,\n                            modelId\n                        } : panel)\n                }));\n        },\n        clearPanelMessages: (panelId)=>{\n            set((state)=>({\n                    panels: state.panels.map((panel)=>panel.id === panelId ? {\n                            ...panel,\n                            messages: []\n                        } : panel)\n                }));\n        },\n        setSelectedPanel: (panelId)=>{\n            set({\n                selectedPanelId: panelId\n            });\n        },\n        toggleSidebar: ()=>{\n            set((state)=>({\n                    sidebarOpen: !state.sidebarOpen\n                }));\n        },\n        setSidebarOpen: (open)=>{\n            set({\n                sidebarOpen: open\n            });\n        },\n        toggleMultiSendPanel: (panelId)=>{\n            set((state)=>{\n                const exists = state.multiSendIds.includes(panelId);\n                const next = exists ? state.multiSendIds.filter((id)=>id !== panelId) : [\n                    ...state.multiSendIds,\n                    panelId\n                ];\n                return {\n                    multiSendIds: next\n                };\n            });\n        },\n        clearMultiSend: ()=>set({\n                multiSendIds: []\n            }),\n        addCustomPrompt: (prompt)=>{\n            set((state)=>({\n                    customPrompts: [\n                        ...state.customPrompts,\n                        prompt\n                    ]\n                }));\n        },\n        updateCustomPrompt: (id, updates)=>{\n            set((state)=>({\n                    customPrompts: state.customPrompts.map((prompt)=>prompt.id === id ? {\n                            ...prompt,\n                            ...updates,\n                            updatedAt: new Date()\n                        } : prompt)\n                }));\n        },\n        deleteCustomPrompt: (id)=>{\n            set((state)=>({\n                    customPrompts: state.customPrompts.filter((prompt)=>prompt.id !== id)\n                }));\n        },\n        applyPromptToPanel: (panelId, promptId)=>{\n            const { customPrompts } = get();\n            const prompt = customPrompts.find((p)=>p.id === promptId);\n            if (prompt) {\n                set((state)=>({\n                        panels: state.panels.map((panel)=>panel.id === panelId ? {\n                                ...panel,\n                                customPrompt: prompt\n                            } : panel)\n                    }));\n            }\n        },\n        setApiKey: (key)=>{\n            set({\n                openRouterApiKey: key\n            });\n        },\n        resetStore: ()=>{\n            set({\n                panels: [\n                    createDefaultPanel(\"panel-1\")\n                ],\n                activePanels: 1,\n                customPrompts: [],\n                openRouterApiKey: \"\",\n                selectedPanelId: \"panel-1\",\n                sidebarOpen: true,\n                multiSendIds: []\n            });\n        }\n    }), {\n    name: \"multi-chat-storage\",\n    partialize: (state)=>({\n            customPrompts: state.customPrompts,\n            openRouterApiKey: state.openRouterApiKey,\n            activePanels: state.activePanels,\n            selectedPanelId: state.selectedPanelId,\n            sidebarOpen: state.sidebarOpen,\n            multiSendIds: state.multiSendIds\n        })\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/use-app-store.ts\n"));

/***/ })

});